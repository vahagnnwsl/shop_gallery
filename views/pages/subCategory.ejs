<% layout('../layout/app') -%>

<div class="home-wrap" id="subCategory">
  <div class="font-up-bold text-uppercase">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb cyan lighten-4">
        <li class="breadcrumb-item"><a class="" href="/">Home</a></li>
        <li class="breadcrumb-item active">{{this.categoryName}}</li>
      </ol>
    </nav>
  </div>
  <div class="modal fade" id="changeCategoryImage" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
       aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Change image</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form method="post" @submit.prevent="changeImageAction">
          <div class="modal-body">
            <input type="hidden" v-model="category_image.category_id" name="id">
            <input type="hidden" v-model="category_image.category_type" name="type">
            <div class="form-outline form-white">
              <input type="file" id="category_image" @change="selectNewImgForCategory"
                     class="form-control" name="file"/>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Save changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <div class="modal fade" id="subCategoryCreateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header text-center">
          <h4 class="modal-title w-100 font-weight-bold">Create Subcategory</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body mx-3">
          <form id="categoryForm" class="needs-validation" novalidate>
            <div class="md-form mb-5">
              <i class="fab fa-buffer prefix grey-text"></i>
              <input type="text" id="subCategoryName" class="form-control validate" name="subCategoryName" required>
              <label data-error="wrong" data-success="right" for="subCategoryName">Subcategory Name</label>
            </div>
            <div class="input-group">
              <div class="input-group-prepend">
                <span class="input-group-text" id="subCategoryImage">Subategory Image</span>
              </div>
              <div class="custom-file">
                <input accept="image/*" type="file" class="custom-file-input" id="fileInput"
                  aria-describedby="subCategoryImage" name="fileInput">
                <label class="custom-file-label" for="fileInput">Choose file</label>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer d-flex justify-content-center">
          <button class="btn btn-default" @click.prevent="createSubCategory()">Create</button>
        </div>
      </div>
    </div>
  </div>

  <br>
  <div class="row">
      <div class="col-md-6 searchdiv">
        <input type="text" v-model="searchSubCategory" id="searchSubCategory" name="searchSubCategory" placeholder="Search subcategory...">
      </div>
      <div class="col-md-6 categorydiv">
        <a href="" style="float: right;" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#subCategoryCreateModal">Create 
          Subcategory</a>
      </div>
  </div>
  
  <div class="mt-3 row" v-if="categoryData.length">
    <div v-for="(item, index) in filteredList" :key="index" class="col-md-4 col-sm-6 col-xs-12 mt-3">
      <div class="card">
        <div class="view overlay">
          <img class="card-img-top" :src="item.imageUrl" height="300" alt="Card image cap">
          <a :href="href + '/subCategory/'+item.subCategoryID">
            <div class="mask rgba-white-slight waves-effect waves-light"></div>
          </a>
        </div>
        <div class="card-body d-flex align-items-center">
          <h3 class="card-title">{{item.name}}</h3>
          <button type="button" class="btn btn-danger waves-effect btn-sm ml-auto"
            @click.prevent="deleteSubCategory(item.subCategoryID)"><i class="fas fa-trash-alt"></i></button>
          <button type="button" class="btn btn-primary waves-effect btn-sm ml-auto"
                  @click.prevent="changeImage(item._id,'subCategory')"><i class="fas fa-images mr-1"></i>
          </button>
        </div>
      </div>
    </div>
  </div>
  <vue-snotify></vue-snotify>
</div>
<script>
  new Vue({
    el: "#subCategory",
    data() {
      return {
        loader: {},
        categoryData: [],
        categoryID: '',
        href: '',
        searchSubCategory: '',
        category_image: {
          category_id: '',
          category_type: '',
          file: null
        }
      }
    },
    computed:{
        filteredList(){
          return this.categoryData.filter(item=>item.name.toLowerCase().includes(this.searchSubCategory.toLowerCase())==true)
        }
      },
    methods: {
      selectNewImgForCategory() {

      },
      changeImageAction: function () {

        let formData = new FormData();
        formData.append('id', this.category_image.category_id);
        formData.append('type', this.category_image.category_type);
        let image = $('#category_image').prop('files')[0];

        console.log(image)
        formData.append('image',image);
        $.ajax({
          method: "POST",
          url: `/api/categories/update-image`,
          data: formData,
          processData: false,
          contentType: false
        }).done((res) => {

          location.reload()
        });
        console.log();
      },
      changeImage(id, type) {

        this.category_image.category_id = id;
        this.category_image.category_type = type;
        $('#changeCategoryImage').modal('show')

      },
      openLoader() {
        this.loader = this.$loading.show({
          loader: 'dots',
          backgroundColor: '#ffffff',
          opacity: 0.5,
          transparence: 0.5
        });
      },
      createSubCategory() {
        var forms = document.getElementsByClassName('needs-validation');
        this.openLoader()
        var validation = Array.prototype.filter.call(forms, function (form) {
          if (form.checkValidity() !== false) {
            $('#subCategoryCreateModal').hide();
            let formData = new FormData()
            let image = $('#fileInput').get(0).files[0];
            formData.append('subCategoryImage', image);
            formData.append('subCategoryName', $('#subCategoryName').val());
            let param = new URL(window.location.href).pathname
            let categoryID = param.split('category/')[1];
            formData.append('categoryID', categoryID)
            $.ajax({
              method: "POST",
              url: "createSubCategory",
              data: formData,
              processData: false,
              contentType: false,
            }).done((res) => {
              if (res.status) {
                this.Snotify.success(res.msg, {
                  position: 'rightTop'
                });
              }
              location.reload()
            });
          } else {
            $('.vld-overlay').removeClass('is-active')
            this.Snotify.warning('Please insert valid value.', {
              position: 'rightTop'
            });
          }
          form.classList.add('was-validated');
        });
      },
      deleteSubCategory(id) {
        swal({
          title: "Confirm",
          text: "Are you sure to delete this Item?",
          icon: "warning",
          button: "OK",
        })
          .then((willDelete) => {
            if (willDelete) {
              $.ajax({
                url: `deleteSubCategory/${id}`,
                method: 'GET'
              }).done(async (res) => {
                this.categoryData = this.categoryData.filter(x => {
                  return x.subCategoryID != id
                })
              })
            }
          }).catch((err) => {

          });
      },
      getSubCategory() {
        this.openLoader()
        $.ajax({
          method: "POST",
          url: "/getSubCategory",
          data: {
            categoryID: this.categoryID
          }
        }).done((res) => {
          this.loader.hide()
          if (res.status) {
            this.categoryData = res.data;
            this.categoryName = res.categoryName;
          } else {
            this.Snotify.error(res.msg, {
              position: 'rightTop'
            })
          }
        })

      }
    },
    mounted() {
      let param = new URL(window.location.href).pathname;
      this.href = param
      this.categoryID = param.split('category/')[1];
      setTimeout(() => {
        this.getSubCategory()
      }, 200);
    },
  })
</script>